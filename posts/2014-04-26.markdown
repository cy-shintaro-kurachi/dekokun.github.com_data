---
title: PHPのarray_searchが全く見当違い(に見える)値を出力する件について(ちゃんとstrictフラグ立てよう)
author: @dekokun
date: 2014/04/26 20:40
tags: PHP
---

どうも。来月結婚する@dekokunです。タイトルで言いたいことは全て言っているのですが、まぁ詳細書きます。

## 導入

PHPのarray_searchは配列の中に値が存在するかどうかを判定し、存在したらその値が最初にマッチしたインデックスを返す関数です。
以下は本題ではありませんがまずは肩慣らしとして、「array_searchのバグじゃないか」としてよく言われる挙動を見ておきましょう。

    <?php
    
    function test() {
      // 1は引数の配列の中に存在するし"match"が出力されるよね
      if (array_search(1, [1, 2, 3])) {
        echo 'match!';
        return;
      }
      echo 'not match!';
    }

    test();
    // => "not match!"が出力される！！！

上記、PHPによく慣れている方は、すぐに「あ、検索する値が配列の0番目にあったのでarray_searchの返り値が0になりfalse判定されたんですね」とわかるかと思います。
はい、上記はまだ序の口です。というか、PHPを書いていればあまりにも普通のことです。

## 本題

では、以下はわかりますでしょうか

    <?php
    
    function test() {
    // 'hoge'なんて引数の配列の中に存在しないのでfalseが返るよね！
      if (array_search('hoge', [1, 2, 3, 0])) {
        echo 'match!';
        return;
      }
      echo 'not match!';
    }

    test();
    // => "match!"が出力される！！！

何が起きているかわかりますかね。私は最初わかりませんでしたよ。

REPLを使ってもう少し詳しく確かめてみましょう(余談ですが、PHPのREPLとしては私はpsyshを使ってます。便利ですね。他の人のPC上で実施するときはphp -a使いますが、結構だるいですよね。)

    $ psysh
    >>> array_search('hoge', [1, 2, 3, 0])
    => 3

上記、なぜか3が出力されてますね。配列の中のインデックスが3の値は…0 !!!


はい、PHPによく慣れている方はもうわかったかもしれませんね。array_searchはデフォルトでは"=="による比較を行うため、'hoge' == 0の比較を行ってtrueになってしまったということだったのでした。ちょっとぎょっとしますよねこれは。

## 解決策

array_searchにはstrictフラグという、値の比較の際に型の一致(及びオブジェクトの一致)をチェックするフラグがあるのでそちらを使いましょう。

    $ psysh
    // strictモードfalse(デフォルト値)版
    >>> array_search('hoge', [1, 2, 3, 0])
    => 3
    // strictモードfalseを明示的に指定版
    >>> array_search('hoge', [1, 2, 3, 0], false)
    => 3
    // strictモードtrue版
    >>> array_search('hoge', [1, 2, 3, 0], true)
    => false
    // やった！これからはちゃんとstrictにしよう！！！

めでたしめでたしなのでしたー！！！

## あとがき

PHPの曖昧さとうまく付き合っていく方法が未だによくわかっていない。
まぁ、とにかく厳密にできるところは一歩ずつ厳密にしていきましょう。
